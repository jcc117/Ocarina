Ocarina Syntax and Grammar
This language allows for inner classes and single inhertance

*lowercase = keyword, expcept for epsilon
*CAPS = production

keywords:
/*******************CLASS AND SUBROUTINE DEFINITIONS**********************/
start, end, class, endclass, extends, subroutine, endsubr
mock, endmock, stub, endstub

/**********************TYPES*****************************/
void, int, float, boolean, hashmap, string

/********************Control Statements******************/
if, else, while, do, end 

**Mocks and stubs will be included later


PROGRAM := start STATEMENTLIST end DEFLIST <end of file>
STATEMENTLIST := STATEMENTLIST STATEMENT | epsilon
DEFLIST := DEFLIST CLASSDEF | DEFLIST METHODDEF | DEFLIST MOCKDEF | DEFLIST STUBDEF | epsilon
CLASSDEF := class IDENTIFIER ":" VARDECLIST DEFLIST endclass | class IDENTIFIER extends IDENTIFIER ":" VARDECLISTDEFLIST endclass
METHODDEF := subroutine RETURNTYPE IDENTIFIER "(" ARGLIST ")" ":" STATEMENTLIST endsubr
VARDECLIST := (TYPE IDENTIFIER ";")*

**MOCKDEF := mock IDENTIFIER(IDENTIFIER) ":" DEFLIST endmock
**STUBDEF := stub IDENTIFIER(IDENTIFIER) ":" STATEMENTLIST endstub

ARGLIST := TYPE IDENTIFIER ("," TYPE IDENTIFIER)
IDENTIFER := (a-zA-Z_)(a-zA-Z0-9_?)*
TYPE := int | float | boolean | hashmap | IDENTIFIER | TYPE "[]" | string
RETURNTYPE := TYPE | void

STATEMENT:= if EXPRESSION ":" STATEMENTLIST else STATEMENTLIST end
	| while EXPRESSION ":" STATEMENTLIST end
	| do STATEMENTLIST ":" while EXPRESSION ";"
	|